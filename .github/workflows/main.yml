name: 'Build & Deploy to QA'
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for master client image'
        required: true
        default: 'qa'
jobs:
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ github.actor }}
      DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      DOCKER_REGISTRY: ghcr.io
      DOCKER_IMAGE: gkonst/lego-tutorial
    steps:
      #      - name: Free Disk Space (Ubuntu)
      #        uses: jlumbroso/free-disk-space@main
      #        with:
      #          tool-cache: false
      #          android: true
      #          dotnet: true
      #          haskell: true
      #          large-packages: true
      #          docker-images: true
      #          swap-storage: true
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}
          tags: |
            type=ref,event=branch
            type=raw,${{ inputs.tag }} 
      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneLinux64
          customParameters: -tag ${{ inputs.tag }}
          buildMethod: Editor.Build.BuildLinuxMasterClient
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      - name: Build & Push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}        